swagger: "2.0"
info:
  description: "The Search API is optimized to help you find the specific item you're looking for (e.g., a specific user, a specific file in a repository, etc.). Think of it the way you think of performing a search on Google. It's designed to help you find the one result you're looking for (or maybe the few results you're looking for). Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides up to 1,000 results for each search."
  version: "1.0.0"
  title: "Search"
host: "developer.github.com"
basePath: "/v3"
tags:
- name: "Search repositories"
  description: "Find repositories via various criteria. This method returns up to 100 results per page."
schemes:
- "http"
paths:
  /search/repositories:
    get:
      tags:
      - "Search repositories"
      summary: "get all the film resources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Schema information for returned response"
        required: true
        schema:
          $ref: "#/definitions/Search repositories"
      - name: "q"
        in: "query"
        description: "Search field"
        required: true
        type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/Search"
definitions:
  Search repositories:
    type: "object"
    properties:
      q:
        type: "string"
        description: "The search terms."
        example: "tetris+language:assembly&sort=stars&order=desc"
        items:
          type: "string"
          enum:
          - "author"
          - "committer"
          - "author-name"
          - "committer-name"
          - "author-email"
      sort:
        type: "string"
        description: "The sort field. One of stars, forks, or updated."
        default: "results are sorted by best match."
      order:
        type: "string"
        description: "The sort order if sort parameter is provided."
        default: "desc"
        items:
          type: "string"
          enum:
          - "asc"
          - "dsc"
  Search:
    type: "object"
    properties:
      total_count:
        type: "integer"
        example: 40
      incomplete_results:
        type: "boolean"
        example: false
      items:
        type: "object"
        example:
          $ref: "#/definitions/Items"
  Items:
    type: "object"
    properties:
      id:
        type: "integer"
        example: 3081286
      name:
        type: "string"
        example: "Tetris"
      full_name:
        type: "string"
        example: "dtrupenn/Tetris"
      owner:
        type: "object"
        example:
          $ref: "#/definitions/Owner"
      private:
        type: "boolean"
        example: false
      html_url:
        type: "string"
        example: "https://github.com/dtrupenn/Tetris"
      description:
        type: "string"
        example: "A C implementation of Tetris using Pennsim through LC4"
  Owner:
    type: "object"
    properties:
      login:
        type: "string"
        example: "dtrupenn"
      id:
        type: "integer"
        example: 872147
      avatar_url:
        type: "string"
        example: "https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"
      gravatar_id:
        type: "string"
        example: ""
      url:
        type: "string"
        example: "https://api.github.com/users/dtrupenn"
      received_events_url:
        type: "string"
        example: "https://api.github.com/users/dtrupenn/received_events"
      type:
        type: "string"
        example: "User"
      
    